from sqlalchemy import create_engine, Column, Integer, String, JSON, DateTime, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import os

Base = declarative_base()

class Container(Base):
    __tablename__ = 'containers'
    
    id = Column(Integer, primary_key=True)
    container_id = Column(String(64), unique=True, nullable=False)
    name = Column(String(255))
    created = Column(DateTime)
    state = Column(JSON)
    image_name = Column(String(255))
    config = Column(JSON)
    host_config = Column(JSON)
    network_settings = Column(JSON)
    
def create_database():
    # Get database connection details from environment variables for security
   
    db_name = os.environ.get('DB_NAME', 'container_db')
    
    # Create database connection URL
    database_url = f("sqlite:///podman.db")
    try:
        # Create engine
        engine = create_engine(database_url)
        
        # Create all tables
        Base.metadata.create_all(engine)
        
        # Create session factory
        Session = sessionmaker(bind=engine)
        
        return engine, Session
    except Exception as e:
        print(f"Error creating database: {str(e)}")
        raise

def store_container_data(session, container_data):
    """
    Store container data in the database
    
    Args:
        session: SQLAlchemy session
        container_data: Dictionary containing container information
    """
    try:
        container = Container(
            container_id=container_data['Id'],
            name=container_data['Name'],
            created=container_data['Created'],
            state=container_data['State'],
            image_name=container_data['ImageName'],
            config=container_data['Config'],
            host_config=container_data['HostConfig'],
            network_settings=container_data['NetworkSettings']
        )
        
        session.add(container)
        session.commit()
        
    except Exception as e:
        session.rollback()
        print(f"Error storing container data: {str(e)}")
        raise

# Example usage:
if __name__ == "__main__":
    # Create database and get session
    engine, Session = create_database()
    session = Session()
    
    # Example container data (you would normally pass your JSON data here)
    container_data = {
        'Id': '99f66530fe9c7249f7cf29f78e8661669d5831cbe4ee80ea757d5e922dd6a8a6',
        'Name': 'foobar',
        'Created': '2021-09-16T06:09:08.936623325-04:00',
        'State': {'Status': 'exited', 'Running': False},
        'ImageName': 'docker.io/library/alpine:latest',
        'Config': {'Hostname': '99f66530fe9c', 'Cmd': ['echo', 'hi']},
        'HostConfig': {'NetworkMode': 'slirp4netns'},
        'NetworkSettings': {'EndpointID': '', 'Gateway': ''}
    }
    
    # Store the data
    store_container_data(session, container_data)
